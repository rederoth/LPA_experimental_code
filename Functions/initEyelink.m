function [el, error]=initEyelink(vpcode)%% Initializes eyeLink-connection, creates edf-file% and writes experimental parameters to edf-file% % 2008 by Martin Rolfsglobal scr setting%---------------------%% define edf-filename %%---------------------%setting.edffilename = strcat(vpcode, '.edf');disp([num2str(GetSecs) ' edffilename: ' setting.edffilename]);% set eyelink defaultsel = EyelinkInitDefaults(scr.main);% Initialization of the connection with the Eyelink Gazetracker.% exit program if this fails.if ~EyelinkInit(setting.TEST~=0) % const.DOTRACK<1    fprintf('Eyelink Init aborted.\n');    Eyelink('Shutdown');    return;end% create edf-filei = Eyelink('openfile', setting.edffilename);if i~=0	fprintf('Cannot create EDF file ''%s'' ', setting.edffilename);	Eyelink('Shutdown');	return;end%---------------------------------------%% general information on the experiment %%---------------------------------------%Eyelink('command', 'add_file_preamble_text ''Recorded with LPA''');%   SET UP TRACKER CONFIGURATIONEyelink('command', 'calibration_type = HV9');Eyelink('command', 'link_event_filter = LEFT,RIGHT,BUTTON');Eyelink('command', 'link_sample_data  = LEFT,RIGHT,GAZE,AREA');Eyelink('command', ['heuristic_filter = ', setting.tracking_filter_mode]);Eyelink('command', ['calibration_area_proportion = ', ...    num2str(setting.calib_perc_of_screen), ' ', num2str(setting.calib_perc_of_screen)]); % reduce distance between pointsEyelink('command', ['sample_rate = ', num2str(setting.eyelink_sampling_frequency)]); % set sampling rate%--------------------------------------------------------%% write descriptions of the experiment into the edf-file %%--------------------------------------------------------%Eyelink('message', 'BEGIN OF DESCRIPTIONS');Eyelink('message', 'VP-Nr. %s', vpcode);Eyelink('message', 'END OF DESCRIPTIONS');%--------------------------------------%% modify a few of the default settings %%--------------------------------------%el.backgroundcolour = repmat(scr.bgColor, 1, 3);		% background color when calibratingel.foregroundcolour = repmat(scr.fgColor, 1, 3);        % foreground color when calibratingel.msgfontcolour = repmat(scr.fgColor, 1, 3); el.imgtitlecolour = repmat(scr.fgColor, 1, 3); el.calibrationtargetcolour = repmat(scr.fgColor, 1, 3); % color of calibration targetel.calibrationfailedsound = 1;				% sounds indicating success of calibrationel.calibrationsuccesssound = 1;% you must call this function to apply the changes from above (says Mario% Kleiner)EyelinkUpdateDefaults(el);% test mode of eyelink connectionstatus = Eyelink('isconnected');switch status    case -1        fprintf(1, 'Eyelink in dummymode.\n\n');    case  0        fprintf(1, 'Eyelink not connected.\n\n');    case  1        fprintf(1, 'Eyelink connected.\n\n');endif Eyelink('isconnected')==el.notconnected    Eyelink('closefile');    Eyelink('shutdown');    Screen('closeall');    return;enderror=el.ABORT_EXPT;